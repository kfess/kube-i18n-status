name: Build and Deploy to GitHub Pages

on:
  schedule:
    - cron: "0 0 * * *" # 毎日 00:00 UTC（JST 09:00）
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas

      - name: Run data collection scripts
        working-directory: ./scripts/shell
        run: |
          chmod +x ./fetch.sh ./collect_all_files.sh
          ./fetch.sh
          ./collect_all_files.sh

      - name: Format data
        working-directory: ./scripts/python
        run: |
          python main.py

      # ✅ Setup Node.js for frontend build
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"
          cache-dependency-path: "web/yarn.lock"

      - name: Install frontend dependencies
        working-directory: ./web
        run: yarn install --frozen-lockfile

      - name: Build frontend
        working-directory: ./web
        env:
          NODE_ENV: production
        run: yarn build

      # ✅ Force push to gh-pages
      - name: Deploy to GitHub Pages via force push
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git fetch origin
          git worktree add gh-pages origin/gh-pages || git worktree add gh-pages --orphan gh-pages
          rm -rf gh-pages/*

          # Copy build and data to gh-pages directory
          rm -rf gh-pages/*
          cp -a web/dist/. gh-pages/
          mkdir -p gh-pages/data
          cp -r data/output/* gh-pages/data/

          cd gh-pages
          git add .
          git commit -m "Deploy site and data ($(date -u +%Y-%m-%dT%H:%M:%SZ))"
          git push origin HEAD:gh-pages --force
